{"ast":null,"code":"import axios from 'axios';\nimport { setFiles, addFile, deleteFileAction } from '../reducers/fileReducer';\nimport { addUploadFile, showUploader } from '../reducers/uploadReducer';\nexport function getFiles(dirId) {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/files${dirId ? '?parent=' + dirId : ''}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      dispatch(setFiles(response.data));\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n}\nexport function createDir(dirId, name) {\n  return async dispatch => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/files`, {\n        name,\n        parent: dirId,\n        type: 'dir'\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      dispatch(addFile(response.data));\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n}\nexport function uploadFile(file, dirId) {\n  return async dispatch => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      if (dirId) {\n        formData.append('parent', dirId);\n      }\n\n      const uploadFile = {\n        name: file.name,\n        progress: 0,\n        id: Date.now()\n      };\n      dispatch(showUploader());\n      dispatch(addUploadFile(uploadFile));\n      const response = await axios.post(`http://localhost:5000/api/files/upload`, formData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        onUploadProgress: progressEvent => {\n          const totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\n          console.log('total', totalLength);\n\n          if (totalLength) {\n            let progress = Math.round(progressEvent.loaded * 100 / totalLength); // console.log(progress)\n          }\n        }\n      });\n      dispatch(addFile(response.data));\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n}\nexport async function downloadFiles(file) {\n  const response = await fetch(`http://localhost:5000/api/files/download?id=${file._id}`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n\n  if (response.status === 200) {\n    const blob = await response.blob();\n    const downloadUrl = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = downloadUrl;\n    link.download = file.name;\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  }\n}\nexport function deleteFile(file) {\n  return async dispatch => {\n    try {\n      const response = await axios.delete(`http://localhost:5000/api/files?id=${file._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      dispatch(deleteFileAction(file._id));\n      alert(response.data.message);\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n}","map":{"version":3,"sources":["/Users/iliashuianov/projects/js_projects/cloud/client/src/actions/file.js"],"names":["axios","setFiles","addFile","deleteFileAction","addUploadFile","showUploader","getFiles","dirId","dispatch","response","get","headers","Authorization","localStorage","getItem","data","e","alert","message","createDir","name","post","parent","type","uploadFile","file","formData","FormData","append","progress","id","Date","now","onUploadProgress","progressEvent","totalLength","lengthComputable","total","target","getResponseHeader","console","log","Math","round","loaded","downloadFiles","fetch","_id","status","blob","downloadUrl","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","remove","deleteFile","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {setFiles, addFile, deleteFileAction} from '../reducers/fileReducer'\nimport { addUploadFile, showUploader } from '../reducers/uploadReducer'\n\nexport function getFiles(dirId) {\n    return async dispatch => {\n        try {\n            const response = await axios.get(`http://localhost:5000/api/files${dirId ? '?parent='+dirId : ''}`, {\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}\n            })\n            dispatch(setFiles(response.data))\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n    }\n}\n\nexport function createDir(dirId, name) {\n    return async dispatch => {\n        try {\n            const response = await axios.post(`http://localhost:5000/api/files`, {\n                name,\n                parent: dirId,\n                type: 'dir'\n            }, {\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}\n            })\n            dispatch(addFile(response.data))\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n    }\n}\n\nexport function uploadFile(file, dirId) {\n    return async dispatch=> {\n        try {\n            const formData = new FormData()\n            formData.append('file', file)\n            if (dirId) {\n                formData.append('parent', dirId)\n            }\n            const uploadFile = {name: file.name, progress: 0, id: Date.now()}\n            dispatch(showUploader())\n            dispatch(addUploadFile(uploadFile))\n            const response = await axios.post(`http://localhost:5000/api/files/upload`, formData, {\n              headers: {Authorization: `Bearer ${localStorage.getItem('token')}`},\n            onUploadProgress: progressEvent => {\n                const totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\n                console.log('total', totalLength)\n                if (totalLength) {\n                    let progress = Math.round((progressEvent.loaded * 100) / totalLength)\n                    // console.log(progress)\n\n                }\n            }\n            })\n            dispatch(addFile(response.data))\n        } catch(e) {\n            alert(e.response.data.message)\n        }\n    }\n}\n\nexport async function downloadFiles(file) {\n    const response = await fetch(`http://localhost:5000/api/files/download?id=${file._id}`,{\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n    })\n    if (response.status === 200) {\n        const blob = await response.blob()\n        const downloadUrl = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = downloadUrl\n        link.download = file.name\n        document.body.appendChild(link)\n        link.click()\n        link.remove()\n    }\n}\n\n\nexport function deleteFile(file) {\n    return async dispatch=> {\n        try {\n            const response = await axios.delete(`http://localhost:5000/api/files?id=${file._id}`, {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\n                }\n            })\n            dispatch(deleteFileAction(file._id))\n            alert(response.data.message)\n        } catch(e) {\n            alert(e.response.data.message)\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}