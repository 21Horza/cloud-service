{"ast":null,"code":"var _jsxFileName = \"/Users/iliashuianov/projects/js_projects/cloud/client/src/components/storage/fileList/file/File.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './file.css';\nimport dirLogo from '../../../../assets/img/dir.svg';\nimport fileLogo from '../../../../assets/img/file.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDir } from '../../../../reducers/fileReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst File = files => {\n  _s();\n\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n\n  function openHandler() {\n    dispatch(setDir(files.file._id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file\",\n    onClick: files.file.type === 'dir' ? () => openHandler() : '',\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: files.file.type === 'dir' ? dirLogo : fileLogo,\n      alt: \"\",\n      className: \"file__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file__name\",\n      children: files.file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file__date\",\n      children: files.file.date.slice(0, 10)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file__size\",\n      children: files.file.size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(File, \"YH1+1VQgoPmNSkl/ySjl2Cv0Sow=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = File;\nexport default File;\n\nvar _c;\n\n$RefreshReg$(_c, \"File\");","map":{"version":3,"sources":["/Users/iliashuianov/projects/js_projects/cloud/client/src/components/storage/fileList/file/File.jsx"],"names":["React","dirLogo","fileLogo","useDispatch","useSelector","setDir","File","files","dispatch","currentDir","state","openHandler","file","_id","type","name","date","slice","size"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,kCAAvB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,UAAU,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACH,KAAN,CAAYE,UAAtB,CAA9B;;AAEA,WAASE,WAAT,GAAuB;AACnBH,IAAAA,QAAQ,CAACH,MAAM,CAACE,KAAK,CAACK,IAAN,CAAWC,GAAZ,CAAP,CAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAEN,KAAK,CAACK,IAAN,CAAWE,IAAX,KAAoB,KAApB,GAA4B,MAAMH,WAAW,EAA7C,GAAkD,EAAjF;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEJ,KAAK,CAACK,IAAN,CAAWE,IAAX,KAAoB,KAApB,GAA4Bb,OAA5B,GAAsCC,QAAhD;AAA0D,MAAA,GAAG,EAAC,EAA9D;AAAiE,MAAA,SAAS,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BK,KAAK,CAACK,IAAN,CAAWG;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BR,KAAK,CAACK,IAAN,CAAWI,IAAX,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,EAAzB;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BV,KAAK,CAACK,IAAN,CAAWM;AAAxC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAhBD;;GAAMZ,I;UACeH,W,EACEC,W;;;KAFjBE,I;AAkBN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport './file.css'\nimport dirLogo from '../../../../assets/img/dir.svg'\nimport fileLogo from '../../../../assets/img/file.svg'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDir } from '../../../../reducers/fileReducer';\n\nconst File = (files) => {\n    const dispatch = useDispatch()\n    const currentDir = useSelector(state => state.files.currentDir)\n    \n    function openHandler() {\n        dispatch(setDir(files.file._id))\n    }\n\n    return (\n        <div className='file' onClick={files.file.type === 'dir' ? () => openHandler() : ''}>\n            <img src={files.file.type === 'dir' ? dirLogo : fileLogo} alt=\"\" className='file__img'/>\n            <div className=\"file__name\">{files.file.name}</div>\n            <div className=\"file__date\">{files.file.date.slice(0, 10)}</div>\n            <div className=\"file__size\">{files.file.size}</div>\n        </div>\n    );\n};\n\nexport default File;"]},"metadata":{},"sourceType":"module"}