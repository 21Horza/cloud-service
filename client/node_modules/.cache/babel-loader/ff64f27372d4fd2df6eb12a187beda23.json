{"ast":null,"code":"var _jsxFileName = \"/Users/iliashuianov/projects/js_projects/cloud/client/src/components/storage/Disk.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFiles, uploadFile } from \"../../actions/file\";\nimport FileList from \"./fileList/FileList\";\nimport Popup from './Popup';\nimport './disk.css';\nimport { setPopup, setDir } from '../../reducers/fileReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Disk = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n  const dirStack = useSelector(state => state.files.dirStack);\n  useEffect(() => {\n    dispatch(getFiles(currentDir));\n  }); // [currentDir]\n\n  function showPopupHandler() {\n    dispatch(setPopup('flex'));\n  }\n\n  function backClickHandler() {\n    const backDirId = dirStack.pop();\n    dispatch(setDir(backDirId));\n  }\n\n  function fileUploadHandler(event) {\n    const files = [...event.target.files];\n    files.forEach(file => dispatch(uploadFile(file, currentDir)));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"disk\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disk__btns\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"disk__back\",\n        onClick: () => backClickHandler(),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"disk__create\",\n        onClick: () => showPopupHandler(),\n        children: \"Create folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disk__upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"disk__upload-input\",\n          className: \"disk__upload-label\",\n          children: \"Upload a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          multiple: true,\n          onChange: event => fileUploadHandler(event),\n          type: \"file\",\n          id: \"disk__upload-input\",\n          className: \"disk__upload-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FileList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Disk, \"Umzu6A5dKAaNUEgQ2DhCTsGaA2k=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Disk;\nexport default Disk;\n\nvar _c;\n\n$RefreshReg$(_c, \"Disk\");","map":{"version":3,"sources":["/Users/iliashuianov/projects/js_projects/cloud/client/src/components/storage/Disk.jsx"],"names":["React","useEffect","useDispatch","useSelector","getFiles","uploadFile","FileList","Popup","setPopup","setDir","Disk","dispatch","currentDir","state","files","dirStack","showPopupHandler","backClickHandler","backDirId","pop","fileUploadHandler","event","target","forEach","file"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,oBAAnC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,YAAP;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,4BAAjC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,UAAU,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,UAAtB,CAA9B;AACA,QAAMG,QAAQ,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QAAtB,CAA5B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ,CAACP,QAAQ,CAACQ,UAAD,CAAT,CAAR;AACH,GAFQ,CAAT,CALe,CAOZ;;AAEH,WAASI,gBAAT,GAA4B;AACxBL,IAAAA,QAAQ,CAACH,QAAQ,CAAC,MAAD,CAAT,CAAR;AACH;;AAED,WAASS,gBAAT,GAA4B;AACxB,UAAMC,SAAS,GAAGH,QAAQ,CAACI,GAAT,EAAlB;AACAR,IAAAA,QAAQ,CAACF,MAAM,CAACS,SAAD,CAAP,CAAR;AACH;;AAED,WAASE,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,UAAMP,KAAK,GAAG,CAAC,GAAGO,KAAK,CAACC,MAAN,CAAaR,KAAjB,CAAd;AACAA,IAAAA,KAAK,CAACS,OAAN,CAAcC,IAAI,IAAIb,QAAQ,CAACN,UAAU,CAACmB,IAAD,EAAOZ,UAAP,CAAX,CAA9B;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAE,MAAMK,gBAAgB,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE,MAAMD,gBAAgB,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,oBAAf;AAAoC,UAAA,SAAS,EAAC,oBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,QAAQ,EAAE,IAAjB;AAAuB,UAAA,QAAQ,EAAGK,KAAD,IAAUD,iBAAiB,CAACC,KAAD,CAA5D;AAAqE,UAAA,IAAI,EAAC,MAA1E;AAAiF,UAAA,EAAE,EAAC,oBAApF;AAAyG,UAAA,SAAS,EAAC;AAAnH;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CArCD;;GAAMX,I;UACeR,W,EACEC,W,EACFA,W;;;KAHfO,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getFiles, uploadFile} from \"../../actions/file\";\nimport FileList from \"./fileList/FileList\";\nimport Popup from './Popup';\nimport './disk.css'\nimport { setPopup, setDir } from '../../reducers/fileReducer';\n\nconst Disk = () => {\n    const dispatch = useDispatch()\n    const currentDir = useSelector(state => state.files.currentDir)\n    const dirStack = useSelector(state => state.files.dirStack)\n\n    useEffect(() => {\n        dispatch(getFiles(currentDir))\n    }) // [currentDir]\n\n    function showPopupHandler() {\n        dispatch(setPopup('flex'))\n    }\n\n    function backClickHandler() {\n        const backDirId = dirStack.pop()\n        dispatch(setDir(backDirId))\n    }\n\n    function fileUploadHandler(event) {\n        const files = [...event.target.files]\n        files.forEach(file => dispatch(uploadFile(file, currentDir)))\n    }\n\n    return (\n        <div className=\"disk\">\n            <div className=\"disk__btns\">\n                <button className=\"disk__back\" onClick={() => backClickHandler()}>Back</button>\n                <button className=\"disk__create\" onClick={() => showPopupHandler()}>Create folder</button>\n                <div className=\"disk__upload\">\n                    <label htmlFor=\"disk__upload-input\" className=\"disk__upload-label\">Upload a file</label>\n                    <input multiple={true} onChange={(event)=> fileUploadHandler(event)} type=\"file\" id=\"disk__upload-input\" className=\"disk__upload-input\"/>\n                </div>\n            </div>\n            <FileList />\n            <Popup />\n        </div>\n    );\n};\n\nexport default Disk;"]},"metadata":{},"sourceType":"module"}